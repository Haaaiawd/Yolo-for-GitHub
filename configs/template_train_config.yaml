# -----------------------------------------------------------------------------
# 训练配置模板 - CQ-09 高帧频弱小目标检测
# -----------------------------------------------------------------------------
# 使用前，请将此文件复制一份，并根据您的设置进行修改。

# --- 1. 数据集配置 ---
# 必须！指向由 `create_sequence_split.py` 脚本生成的 .yaml 文件路径。
data: /path/to/your_new_dataset_output/tiaozhanbei_seq_data.yaml

# --- 2. 模型配置 ---
# 使用的预训练模型。可以是官方的 .pt 文件，也可以是您自己之前训练好的模型。
weights: yolov8n.pt  # 建议从 yolov8n.pt 开始

# --- 3. 训练参数 ---
# 训练的总轮数。
epochs: 100

# 批处理大小。根据您的显存大小进行调整。
batch: 16

# 图像尺寸。训练和推理时图像将被调整到这个大小。
imgsz: 640

# --- 4. 优化器与学习率 ---
# 优化器类型。可选: 'SGD', 'Adam', 'AdamW', 'NAdam', 'RAdam', 'RMSProp'
optimizer: 'AdamW'

# 初始学习率。
lr0: 0.001

# 最终学习率 (lr0 * lrf)。
lrf: 0.01

# --- 5. 保存与日志 ---
# 训练结果的保存目录。
project: ./runs/train

# 本次训练的实验名称。将在 `project` 目录下创建一个以此命名的子目录。
name: experiment_name

# 是否保存 checkpoints。
save: true

# 每隔多少个 epoch 保存一次 checkpoint。
save_period: 10

# --- 6. 硬件与性能 ---
# 使用的设备。'cpu' 或 '0' (对于第一个GPU), '0,1,2,3' (对于多GPU)。
device: '0'

# 数据加载时使用的工作线程数。
workers: 8

# 是否缓存图像到内存以加速训练。如果内存充足，建议开启。
cache: false 